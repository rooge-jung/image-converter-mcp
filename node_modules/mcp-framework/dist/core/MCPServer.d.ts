import { SSETransportConfig } from "../transports/sse/types.js";
export type TransportType = "stdio" | "sse";
export interface TransportConfig {
    type: TransportType;
    options?: SSETransportConfig & {
        auth?: SSETransportConfig['auth'];
    };
}
export interface MCPServerConfig {
    name?: string;
    version?: string;
    basePath?: string;
    transport?: TransportConfig;
}
export type ServerCapabilities = {
    tools?: {
        enabled: true;
    };
    schemas?: {
        enabled: true;
    };
    prompts?: {
        enabled: true;
    };
    resources?: {
        enabled: true;
    };
};
export declare class MCPServer {
    private server;
    private toolsMap;
    private promptsMap;
    private resourcesMap;
    private toolLoader;
    private promptLoader;
    private resourceLoader;
    private serverName;
    private serverVersion;
    private basePath;
    private transportConfig;
    private capabilities;
    private isRunning;
    private transport?;
    private shutdownPromise?;
    private shutdownResolve?;
    constructor(config?: MCPServerConfig);
    private resolveBasePath;
    private createTransport;
    private readPackageJson;
    private getDefaultName;
    private getDefaultVersion;
    private setupHandlers;
    private detectCapabilities;
    start(): Promise<void>;
    stop(): Promise<void>;
}
